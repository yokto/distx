name: Build Headers
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Install ninja
      run: sudo apt-get install -y ninja-build clang

    - name: clone llvm
      run: git clone "https://github.com/yokto/llvm-project.git" llvm-src

    - name: build llvm stage1
      run: |
        #ls
        #mkdir -p _zwolf/github.com_2024-xlibc_2-common
        #tar -C _zwolf/github__com_xlibc_2024-common --strip-components=1 -xf headers.tar.xz
        sudo mkdir /_zwolf
        sudo chown ${USER}: /_zwolf
        cd llvm-src
        ../llvm-src/build-linux.sh
      
#    - name: Create Release
#      id: create_release
#      uses: actions/create-release@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        tag_name: 2024.${{ github.run_number }}
#        release_name: Release 2024.${{ github.run_number }}
#        draft: false
#        prerelease: false
#    - name: Upload Release Asset
#      id: upload-release-asset 
#      uses: actions/upload-release-asset@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
#        asset_path: ./headers.tar.xz
#        asset_name: headers.tar.xz
#        asset_content_type: application/tar
